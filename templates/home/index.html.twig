{% extends 'base.html.twig' %}

{% block title %}Calendrier{% endblock %}

{% block body %}
  
    
    <h1 class="text-center">S+C = ♥</h1>
      <div id="calendar"></div>
          <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="exampleModalLabel">Ajouter</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                </div>
                <div class="modal-body">
                  <div id="formContainer"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                    <button class="btn btn-primary">{{ button_label|default('Enregistrer') }}</button>
                </div>
              </div>
            </div>
          </div>
    
    
{% endblock %}

{% block javascripts %}
    <script>

    //Configuration général du calendrier
      document.addEventListener('DOMContentLoaded', function() {
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
          initialView: 'dayGridMonth',
          locale: 'fr',
          timeZone: 'Europe/Paris',
          themeSystem: 'bootstrap5',
          headerToolbar: {
            locale: 'fr',
            start: 'prev,next today',
            center: 'title',
            end: 'dayGridMonth,timeGridWeek',
            
          },
          events: {{data|raw}},
          editable: true,
          eventResizableFromStart: true,
          eventDurationEditable: true,
          navLinks: true,
          firstDay: 1,
          selectable: true,
          themeSystem: 'bootstrap5',
          dateClick: function(info){
            onClick(info)
          },
          views: {
            dayGridMonth: {
              buttonText: 'Mois'
              },
            timeGridWeek: {
              buttonText: 'Semaine'
              }
          },
        });

        //Quand une tâche est déplacé
        calendar.on('eventChange', (e)=>{
            let url = `/${e.event.id}`
            var donnees = {
                "title": e.event.title,
                "description": e.event.extendedProps.description,
                "start": e.event.start,
                "end": e.event.end,
                "allDay": e.event.allDay,
                "backgroundColor": e.event.backgroundColor,
                "borderColor": e.event.borderColor,
                "textColor": e.event.textColor,
            }
            console.log(donnees);
            let xhr = new XMLHttpRequest
            xhr.open("PUT", url)
            xhr.send(JSON.stringify(donnees))
          });
        calendar.render();
      });


      //Quand on clique sur un element du calendrier
      function onClick(e){
        let donnees = JSON.stringify(e)
        // Effectuez une requête HTTP pour récupérer le HTML du formulaire
        axios.post('/select/event', donnees)
          .then(function (response) {
            // Injectez le HTML du formulaire dans le conteneur
              document.getElementById('formContainer').innerHTML = response.data;
              var modal = new bootstrap.Modal(document.getElementById("exampleModal"));
              modal.show();
          })
          .catch(function (error) {
            console.log(error);
          });
      }
   
    </script>
{% endblock %}